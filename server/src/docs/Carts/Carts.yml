paths:
  /api/carts:
    get:
      tags:
        - Carts
      summary: Get all carts from the DB
      responses:
        "200":
          description: Carts fetched from the DB
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "500":
          description: Internal server error
    post:
      tags:
        - Carts
      summary: Create a cart into DB
      responses:
        "200":
          description: Cart created to the DB
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "500":
          description: Internal server error

  /api/carts/{cartId}:
    get:
      tags:
        - Carts
      summary: Get a single cart by their id
      parameters:
        - name: cartId
          in: path
          required: true
          description: cartId to fetch
          schema:
            $type: string
      responses:
        "200":
          description: Cart by id fetched from the DB
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Missing id
        "404":
          description: Cart not found
        "500":
          description: Internal server error
    delete:
      tags:
        - Carts
      summary: Clears a cart
      parameters:
        - name: cartId
          in: path
          required: true
          description: CartId where the product will be added
          schema:
            $type: string
      responses:
        "200":
          description: Cart cleared
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Invalid params
        "404":
          description: Cart not found
        "500":
          description: Internal server error

  /api/carts/{cartId}/product/{productId}:
    put:
      tags:
        - Carts
      summary: Updates a single cart by an id
      parameters:
        - name: cartId
          in: path
          required: true
          description: CartId where the product will be added
          schema:
            $type: string
        - name: productId
          in: path
          required: true
          description: ProductId to add to the cart
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addProductToCart"
      responses:
        "200":
          description: Product added to the cart
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Invalid body or params
        "404":
          description: Cart or Product not found
        "500":
          description: Internal server error
    delete:
      tags:
        - Carts
      summary: Deletes a product from a cart
      parameters:
        - name: cartId
          in: path
          required: true
          description: CartId where the product will be added
          schema:
            $type: string
        - name: productId
          in: path
          required: true
          description: ProductId to add to the cart
          schema:
            $type: string
      responses:
        "200":
          description: Product removed from the cart
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Invalid params
        "404":
          description: Cart or Product not found
        "500":
          description: Internal server error

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Autogenerated Mongo Id
        products:
          type: array
          items:
            type: object
          description: List of products stored on the cart
      example:
        _id: ObjectId("abc123def456")
        products: []
  requestBodies:
    addProductToCart:
      type: object
      properties:
        amount:
          type: number
          description: Amount of item to add for the products
      example:
        amount: 10
